{% comment %}
  Renders facets (filtering and sorting) - Updated sidebar design

  Accepts:
  - results: {Object} Collection or Search object
  - enable_filtering: {Boolean} Show filtering when true
  - enable_sorting: {Boolean} Show sorting when true
  - filter_type: {String} Type of filter
  - paginate: {Object}

  Usage:
  {% render 'facets', results: collection, enable_filtering: true, enable_sorting: true, filter_type: 'vertical', paginate: paginate %}
{% endcomment %}

{{ 'component-show-more.css' | asset_url | stylesheet_tag }}
{{ 'component-swatch-input.css' | asset_url | stylesheet_tag }}
{{ 'component-swatch.css' | asset_url | stylesheet_tag }}

<style>
.sidebar-filters {
  background: #ffffff;
  border-right: 1px solid #e5e7eb;
  padding: 0;
  width: 280px;
  min-height: 100vh;
}

.sidebar-filters__header {
  padding: 20px;
  border-bottom: 1px solid #e5e7eb;
  display: flex;
  gap: 10px;
}

.sidebar-filters__btn {
  flex: 1;
  padding: 12px 16px;
  border: 1px solid #e5e7eb;
  background: #ffffff;
  color: #374151;
  font-size: 14px;
  font-weight: 600;
  text-transform: uppercase;
  cursor: pointer;
  transition: all 0.2s ease;
}

.sidebar-filters__btn--reset {
  background: #ffffff;
  color: #374151;
}

.sidebar-filters__btn--reset:hover {
  background: #f9fafb;
}

.sidebar-filters__btn--filter {
  background: #dc2626;
  color: #ffffff;
  border-color: #dc2626;
}

.sidebar-filters__btn--filter:hover {
  background: #b91c1c;
}

.sidebar-filters__content {
  padding: 0;
}

.filter-section {
  border-bottom: 1px solid #e5e7eb;
}

.filter-section__header {
  padding: 20px;
  cursor: pointer;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: #ffffff;
  transition: background-color 0.2s ease;
}

.filter-section__header:hover {
  background: #f9fafb;
}

.filter-section__title {
  font-size: 14px;
  font-weight: 700;
  color: #111827;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  margin: 0;
}

.filter-section__arrow {
  width: 16px;
  height: 16px;
  transition: transform 0.2s ease;
}

.filter-section[open] .filter-section__arrow {
  transform: rotate(180deg);
}

.filter-section__content {
  padding: 0 20px 20px 20px;
  background: #ffffff;
}

.filter-option {
  display: flex;
  align-items: center;
  margin-bottom: 12px;
  cursor: pointer;
  padding: 4px 0;
}

.filter-option:last-child {
  margin-bottom: 0;
}

.filter-option__checkbox {
  width: 18px;
  height: 18px;
  border: 2px solid #d1d5db;
  border-radius: 2px;
  margin-right: 12px;
  position: relative;
  cursor: pointer;
  background: #ffffff;
  transition: all 0.2s ease;
}

.filter-option__checkbox:hover {
  border-color: #9ca3af;
}

.filter-option__checkbox--checked {
  background: #dc2626;
  border-color: #dc2626;
}

.filter-option__checkbox--checked::after {
  content: 'âœ“';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #ffffff;
  font-size: 12px;
  font-weight: bold;
}

/* Circle style for mobile and desktop boolean/list filters */
.filter-option__circle {
  width: 18px;
  height: 18px;
  border: 2px solid #d1d5db;
  border-radius: 50%;
  margin-right: 12px;
  position: relative;
  cursor: pointer;
  background: #ffffff;
  transition: all 0.2s ease;
  flex-shrink: 0;
}

.filter-option__circle:hover {
  border-color: #9ca3af;
}

.filter-option__circle--checked {
  background: #dc2626;
  border-color: #dc2626;
}

.filter-option__circle--checked::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 8px;
  height: 8px;
  background: #ffffff;
  border-radius: 50%;
}

/* Mobile filter button styles */
.mobile-filter-toggle {
  padding: 15px 20px;
  border-bottom: 1px solid #e5e7eb;
}

.mobile-filter-btn {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 12px 16px;
  background: #ffffff;
  border: 1px solid #d1d5db;
  border-radius: 6px;
  color: #374151;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  width: 100%;
  justify-content: center;
  transition: all 0.2s ease;
}

.mobile-filter-btn:hover {
  background: #f9fafb;
  border-color: #9ca3af;
}

.mobile-filter-icon {
  width: 20px;
  height: 20px;
}

/* Mobile sidebar overlay */
.mobile-sidebar-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  z-index: 999;
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s ease;
}

.mobile-sidebar-overlay.active {
  opacity: 1;
  visibility: visible;
}

/* Mobile sidebar */
.mobile-sidebar {
  position: fixed;
  top: 0;
  left: -100%;
  width: 280px;
  height: 100vh;
  background: #ffffff;
  z-index: 1000;
  transition: left 0.3s ease;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
}

.mobile-sidebar.active {
  left: 0;
}

.mobile-sidebar__header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 20px;
  border-bottom: 1px solid #e5e7eb;
  background: #ffffff;
  position: sticky;
  top: 0;
  z-index: 10;
}

.mobile-sidebar__header h2 {
  font-size: 18px;
  font-weight: 600;
  color: #111827;
  margin: 0;
}

.mobile-sidebar__close {
  background: none;
  border: none;
  color: #6b7280;
  cursor: pointer;
  padding: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.mobile-sidebar__close svg {
  width: 24px;
  height: 24px;
}

.filter-count {
  color: #6b7280;
  font-weight: 400;
  margin-left: 4px;
}

.filter-option__label {
  font-size: 14px;
  color: #374151;
  cursor: pointer;
  flex: 1;
}

.filter-option:hover .filter-option__label {
  color: #111827;
}

.price-range-section {
  padding: 0 20px 20px 20px;
}

.price-range__title {
  font-size: 14px;
  font-weight: 700;
  color: #111827;
  text-transform: uppercase;
  margin-bottom: 16px;
  display: block;
}

.price-range__slider {
  margin-bottom: 16px;
}

.price-range__input {
  width: 100%;
  height: 6px;
  background: #e5e7eb;
  border-radius: 3px;
  outline: none;
  -webkit-appearance: none;
  appearance: none;
  cursor: pointer;
}

.price-range__input::-webkit-slider-thumb {
  width: 18px;
  height: 18px;
  background: #dc2626;
  border-radius: 50%;
  cursor: pointer;
  -webkit-appearance: none;
  appearance: none;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.price-range__input::-moz-range-thumb {
  width: 18px;
  height: 18px;
  background: #dc2626;
  border-radius: 50%;
  cursor: pointer;
  border: none;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.price-range__values {
  display: flex;
  justify-content: space-between;
  font-size: 14px;
  color: #6b7280;
}

.results-count {
  position: absolute;
  top: 20px;
  right: 20px;
  font-size: 14px;
  color: #6b7280;
}

/* Hide default Shopify styles for vertical layout */
.facets-container .facets__form-vertical {
  display: none;
}
</style>

{%- liquid
  assign sort_by = results.sort_by | default: results.default_sort_by
  assign total_active_values = 0
  assign default_presentation = 'text'
  if results.url
    assign results_url = results.url
  else
    assign terms = results.terms | escape
    assign results_url = '?q=' | append: terms | append: '&options%5Bprefix%5D=last&sort_by=' | append: sort_by
  endif
-%}

<div class="facets-container{% if filter_type == 'drawer' %} facets-container-drawer{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}">
  {%- if filter_type == 'vertical' -%}
    <!-- Custom Sidebar Design -->
    <div class="sidebar-filters small-hide">
      <!-- Header with Reset and Filter buttons -->
      <div class="sidebar-filters__header">
        <a href="{{ results_url }}" class="sidebar-filters__btn sidebar-filters__btn--reset">
          RESET
        </a>
        <button class="sidebar-filters__btn sidebar-filters__btn--filter" onclick="document.getElementById('FacetFiltersForm').submit();">
          FILTER
        </button>
      </div>

      <div class="results-count">
        1 - {{ paginate.current_offset | plus: paginate.page_size | at_most: results.products_count }} of {{ results.products_count }} results
      </div>

      <form id="FacetFiltersForm" class="sidebar-filters__content">
        {%- if results.terms -%}
          <input type="hidden" name="q" value="{{ results.terms | escape }}">
          <input name="options[prefix]" type="hidden" value="last">
        {%- endif -%}

        {% if enable_filtering %}
          {%- for filter in results.filters -%}
            {% case filter.type %}
              {% when 'boolean', 'list' %}
                <details class="filter-section" {% if forloop.index <= 2 %}open{% endif %}>
                  <summary class="filter-section__header">
                  <h3 class="filter-section__title">
                    {{ filter.label | escape }}
                    {%- if filter.active_values.size > 0 -%}
                      <span class="filter-count">({{ filter.active_values.size }})</span>
                    {%- endif -%}
                  </h3>
                    <svg class="filter-section__arrow" viewBox="0 0 16 16" fill="currentColor">
                      <path d="M8 12l-4-4h8l-4 4z"/>
                    </svg>
                  </summary>
                  <div class="filter-section__content">
                    {%- liquid
                      assign sorted_values = filter.values
                      if filter.operator == 'AND'
                        assign active_filter_values = filter.values | where: 'active', true
                        assign inactive_filter_values = filter.values | where: 'active', false
                        assign sorted_values = active_filter_values | concat: inactive_filter_values
                      endif
                    -%}
                    {%- for value in sorted_values -%}
                      {% liquid
                        assign input_id = 'Filter-' | append: filter.param_name | escape | append: '-' | append: forloop.index
                        assign is_disabled = false
                        if value.count == 0 and value.active == false
                          assign is_disabled = true
                        endif
                      %}
                      <label class="filter-option" for="{{ input_id }}">
                        <input
                          type="checkbox"
                          name="{{ value.param_name }}"
                          value="{{ value.value }}"
                          id="{{ input_id }}"
                          style="display: none;"
                          {% if value.active %}checked{% endif %}
                          {% if is_disabled %}disabled{% endif %}
                          onchange="this.form.submit();"
                        >
                        <div class="filter-option__circle{% if value.active %} filter-option__circle--checked{% endif %}"></div>
                        <span class="filter-option__label">{{ value.label | escape }}</span>
                      </label>
                    {%- endfor -%}
                  </div>
                </details>

              {% when 'price_range' %}
                <details class="filter-section" open>
                  <summary class="filter-section__header">
                    <h3 class="filter-section__title">{{ filter.label | escape }}</h3>
                    <svg class="filter-section__arrow" viewBox="0 0 16 16" fill="currentColor">
                      <path d="M8 12l-4-4h8l-4 4z"/>
                    </svg>
                  </summary>
                  <div class="price-range-section">
                    {%- assign max_price = filter.range_max -%}
                    {%- assign min_price = filter.range_min -%}
                    {%- assign current_min = filter.min_value.value | default: min_price -%}
                    {%- assign current_max = filter.max_value.value | default: max_price -%}
                    
                    <div class="price-range__slider">
                      <input
                        type="range"
                        class="price-range__input"
                        min="{{ min_price }}"
                        max="{{ max_price }}"
                        value="{{ current_min }}"
                        name="{{ filter.min_value.param_name }}"
                        onchange="this.form.submit();"
                      >
                    </div>
                    <div class="price-range__values">
                      <span>{{ min_price | money }}</span>
                      <span>{{ max_price | money }}</span>
                    </div>
                  </div>
                </details>
            {% endcase %}
          {%- endfor -%}
        {% endif %}
      </form>
    </div>

    <!-- Fallback to original Shopify facets for other layouts -->
    <facet-filters-form class="facets small-hide" style="display: none;">
      <form
        id="FacetFiltersFormOriginal"
        class="facets__form-vertical"
      >
        {%- if results.terms -%}
          <input type="hidden" name="q" value="{{ results.terms | escape }}">
          <input name="options[prefix]" type="hidden" value="last">
        {%- endif -%}

        {% if enable_filtering %}
          <div id="FacetsWrapperDesktop">
            <div class="active-facets active-facets-desktop">
              <div class="active-facets-vertical-filter">
                {%- unless results.filters == empty -%}
                  <h2 class="facets__heading facets__heading--vertical caption-large text-body" id="verticalTitle" tabindex="-1">
                    {{ 'products.facets.filter_by_label' | t }}
                  </h2>
                {%- endunless -%}
                <facet-remove class="active-facets__button-wrapper">
                  <a href="{{ results_url }}" class="active-facets__button-remove underlined-link">
                    <span>{{ 'products.facets.clear_all' | t }}</span>
                  </a>
                </facet-remove>
              </div>
            </div>
            <!-- Original filter code continues here... -->
          </div>
        {% endif %}
      </form>
    </facet-filters-form>
  {%- endif -%}

  <!-- Mobile Filter Toggle Button -->
  <div class="mobile-filter-toggle medium-hide large-up-hide">
    <button class="mobile-filter-btn" onclick="toggleMobileSidebar()">
      <svg class="mobile-filter-icon" viewBox="0 0 24 24" fill="currentColor">
        <path d="M3 17v2h6v-2H3zM3 5v2h10V5H3zm10 16v-2h8v-2h-8v-2h-2v6h2zM7 9v2H3v2h4v2h2V9H7zm14 4v-2H11v2h10zm-6-4h2V7h4V5h-4V3h-2v6z"/>
      </svg>
      <span>Filter & Sort</span>
    </button>
  </div>

  <!-- Mobile Sidebar Overlay -->
  <div class="mobile-sidebar-overlay" id="mobileSidebarOverlay" onclick="closeMobileSidebar()"></div>
  
  <!-- Mobile Sidebar (same as desktop) -->
  <div class="mobile-sidebar" id="mobileSidebar">
    <div class="mobile-sidebar__header">
      <h2>Filter & Sort</h2>
      <button class="mobile-sidebar__close" onclick="closeMobileSidebar()">
        <svg viewBox="0 0 24 24" fill="currentColor">
          <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>
        </svg>
      </button>
    </div>
    
    <div class="sidebar-filters__header">
      <a href="{{ results_url }}" class="sidebar-filters__btn sidebar-filters__btn--reset">
        RESET
      </a>
      <button class="sidebar-filters__btn sidebar-filters__btn--filter" onclick="document.getElementById('MobileFacetFiltersForm').submit();">
        FILTER
      </button>
    </div>

    <form id="MobileFacetFiltersForm" class="sidebar-filters__content">
      {%- if results.terms -%}
        <input type="hidden" name="q" value="{{ results.terms | escape }}">
        <input name="options[prefix]" type="hidden" value="last">
      {%- endif -%}

      {% if enable_filtering %}
        {%- for filter in results.filters -%}
          {% case filter.type %}
            {% when 'boolean', 'list' %}
              <details class="filter-section" {% if forloop.index <= 2 %}open{% endif %}>
                <summary class="filter-section__header">
                  <h3 class="filter-section__title">
                    {{ filter.label | escape }}
                    {%- if filter.active_values.size > 0 -%}
                      <span class="filter-count">({{ filter.active_values.size }})</span>
                    {%- endif -%}
                  </h3>
                  <svg class="filter-section__arrow" viewBox="0 0 16 16" fill="currentColor">
                    <path d="M8 12l-4-4h8l-4 4z"/>
                  </svg>
                </summary>
                <div class="filter-section__content">
                  {%- liquid
                    assign sorted_values = filter.values
                    if filter.operator == 'AND'
                      assign active_filter_values = filter.values | where: 'active', true
                      assign inactive_filter_values = filter.values | where: 'active', false
                      assign sorted_values = active_filter_values | concat: inactive_filter_values
                    endif
                  -%}
                  {%- for value in sorted_values -%}
                    {% liquid
                      assign input_id = 'MobileFilter-' | append: filter.param_name | escape | append: '-' | append: forloop.index
                      assign is_disabled = false
                      if value.count == 0 and value.active == false
                        assign is_disabled = true
                      endif
                    %}
                    <label class="filter-option" for="{{ input_id }}">
                      <input
                        type="checkbox"
                        name="{{ value.param_name }}"
                        value="{{ value.value }}"
                        id="{{ input_id }}"
                        style="display: none;"
                        {% if value.active %}checked{% endif %}
                        {% if is_disabled %}disabled{% endif %}
                        onchange="this.form.submit();"
                      >
                      <div class="filter-option__circle{% if value.active %} filter-option__circle--checked{% endif %}"></div>
                      <span class="filter-option__label">{{ value.label | escape }}</span>
                    </label>
                  {%- endfor -%}
                </div>
              </details>

            {% when 'price_range' %}
              <details class="filter-section" open>
                <summary class="filter-section__header">
                  <h3 class="filter-section__title">{{ filter.label | escape }}</h3>
                  <svg class="filter-section__arrow" viewBox="0 0 16 16" fill="currentColor">
                    <path d="M8 12l-4-4h8l-4 4z"/>
                  </svg>
                </summary>
                <div class="price-range-section">
                  {%- assign max_price = filter.range_max -%}
                  {%- assign min_price = filter.range_min -%}
                  {%- assign current_min = filter.min_value.value | default: min_price -%}
                  {%- assign current_max = filter.max_value.value | default: max_price -%}
                  
                  <div class="price-range__slider">
                    <input
                      type="range"
                      class="price-range__input"
                      min="{{ min_price }}"
                      max="{{ max_price }}"
                      value="{{ current_min }}"
                      name="{{ filter.min_value.param_name }}"
                      onchange="this.form.submit();"
                    >
                  </div>
                  <div class="price-range__values">
                    <span>{{ min_price | money }}</span>
                    <span>{{ max_price | money }}</span>
                  </div>
                </div>
              </details>
          {% endcase %}
        {%- endfor -%}
      {% endif %}
    </form>
  </div>
</div>

<script>
// Handle checkbox visual state for both desktop and mobile
document.addEventListener('DOMContentLoaded', function() {
  const checkboxes = document.querySelectorAll('.sidebar-filters input[type="checkbox"], .mobile-sidebar input[type="checkbox"]');
  
  checkboxes.forEach(function(checkbox) {
    const visualCheckbox = checkbox.nextElementSibling;
    
    checkbox.addEventListener('change', function() {
      if (this.checked) {
        if (visualCheckbox.classList.contains('filter-option__circle')) {
          visualCheckbox.classList.add('filter-option__circle--checked');
        } else {
          visualCheckbox.classList.add('filter-option__checkbox--checked');
        }
      } else {
        visualCheckbox.classList.remove('filter-option__circle--checked', 'filter-option__checkbox--checked');
      }
    });
  });
});

// Mobile sidebar toggle functions
function toggleMobileSidebar() {
  const overlay = document.getElementById('mobileSidebarOverlay');
  const sidebar = document.getElementById('mobileSidebar');
  
  overlay.classList.add('active');
  sidebar.classList.add('active');
  document.body.style.overflow = 'hidden';
}

function closeMobileSidebar() {
  const overlay = document.getElementById('mobileSidebarOverlay');
  const sidebar = document.getElementById('mobileSidebar');
  
  overlay.classList.remove('active');
  sidebar.classList.remove('active');
  document.body.style.overflow = '';
}
</script>